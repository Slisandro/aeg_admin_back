{
  "service": {
    "service": "aeg-admin",
    "serviceObject": {
      "name": "aeg-admin"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs16.x",
      "region": "us-east-2",
      "cache": "bounded",
      "environment": {
        "DYNAMODB_ACCESS_KEY": "AKIAZNWR25HXCDQP5AHM",
        "DYNAMODB_SECRET_ACCESS_KEY": "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"
      },
      "httpApi": {
        "cors": true
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GraphqlLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aeg-admin-dev-graphql"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "aeg-admin",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aeg-admin-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aeg-admin-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aeg-admin",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GraphqlLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-2-11bb667e-df77",
                "S3Key": "serverless/aeg-admin/dev/1738774929166-2025-02-05T17:02:09.166Z/aeg-admin.zip"
              },
              "Handler": "dist/index.handler",
              "Runtime": "nodejs16.x",
              "FunctionName": "aeg-admin-dev-graphql",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_ACCESS_KEY": "AKIAZNWR25HXCDQP5AHM",
                  "DYNAMODB_SECRET_ACCESS_KEY": "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"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GraphqlLogGroup"
            ]
          },
          "GraphqlLambdaVersionDW8YRiptQJxGpGqPCRqZ3eRjXSnHWS6Ypgq50w0cSc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GraphqlLambdaFunction"
              },
              "CodeSha256": "07yoroSHtPiwzyaP4pvfyBSjo0TFpJ3vMFXNbwOn91Y="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-aeg-admin",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "AllowMethods": [
                  "OPTIONS",
                  "POST",
                  "GET"
                ],
                "AllowOrigins": [
                  "*"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "GraphqlLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GraphqlLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationGraphql": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GraphqlLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePost": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGraphql"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGraphql"
          },
          "HttpApiRouteGet": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationGraphql"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationGraphql"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-2-11bb667e-df77",
            "Export": {
              "Name": "sls-aeg-admin-dev-ServerlessDeploymentBucketName"
            }
          },
          "GraphqlLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GraphqlLambdaVersionDW8YRiptQJxGpGqPCRqZ3eRjXSnHWS6Ypgq50w0cSc"
            },
            "Export": {
              "Name": "sls-aeg-admin-dev-GraphqlLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-aeg-admin-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-aeg-admin-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "serverless-offline": {
        "noTimeout": true
      }
    },
    "plugins": [
      "serverless-offline"
    ],
    "pluginsData": {},
    "functions": {
      "graphql": {
        "handler": "dist/index.handler",
        "events": [
          {
            "httpApi": {
              "path": "/",
              "method": "POST"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/"
          },
          {
            "httpApi": {
              "path": "/",
              "method": "GET"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/"
          }
        ],
        "name": "aeg-admin-dev-graphql",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs16.x",
        "vpc": {},
        "versionLogicalId": "GraphqlLambdaVersionDW8YRiptQJxGpGqPCRqZ3eRjXSnHWS6Ypgq50w0cSc"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "org": "slisandro",
      "app": "aeg",
      "service": "aeg-admin",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "app": "aeg",
    "appId": null,
    "org": "slisandro",
    "orgId": null,
    "layers": {},
    "artifact": "C:\\Users\\lisan\\aeg_admin\\back\\.serverless\\aeg-admin.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/aeg-admin/dev/1738774929166-2025-02-05T17:02:09.166Z",
    "artifact": "aeg-admin.zip"
  }
}